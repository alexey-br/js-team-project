{"mappings":"AAIA,MAGMA,EAAO,CACXC,uBAAwBC,SAASC,cAAc,uBAC/CC,wBAAyBF,SAASC,cAChC,kCAEFE,kBAAmBH,SAASC,cAAc,4BAC1CG,gBAAiBJ,SAASC,cAAc,2BAG1CH,EAAKK,kBAAkBE,iBAAiB,SAqBxC,SAA2BC,GACzBC,EAAYC,YAjCK,gBAkCjBC,G,IAtBFX,EAAKM,gBAAgBC,iBAAiB,SAyBtC,SAAyBC,GACvBC,EAAYC,YAvCG,gBAwCfC,G,IAzBF,MAAMF,EAAc,ICnBL,MASbG,SACE,MAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQC,KAAKR,cACxD,IAAKG,EAAY,OACjBK,KAAKC,MAAQC,KAAKC,KAAKR,EAAWS,OAAS,IAC3C,MAAMC,EAAwBV,EAAWW,QAAO,CAACC,EAAKC,EAAOC,IACvDA,EAAoB,GAAZT,KAAKU,MAAaD,GAA2B,IAAjBT,KAAKU,KAAO,GAC3C,IAAIH,EAAKC,GAETD,GAER,IACGI,EAASX,KAAKY,aAAaP,GACjCL,KAAKa,UAAUC,UAAYH,C,CApB7BI,YAAYF,EAAWD,GACrBZ,KAAKa,UAAYA,EACjBb,KAAKR,YAAc,GACnBQ,KAAKU,KAAO,EACZV,KAAKC,MAAQ,EACbD,KAAKY,aAAeA,C,GDctB9B,EAAKC,wBElBQ,SAA4BY,GACzC,OAAOA,EAAWW,QAAO,CAACC,EAAKC,KAC7B,MAAMQ,GAAEA,EAAEC,OAAEA,EAAMC,YAAEA,EAAWC,aAAEA,EAAYC,MAAEA,EAAKC,aAAEA,GACpDb,EAOF,MAAO,GAAGD,mDACiCS,2CAL5BE,EACX,kCAAkBA,IAClB,gCAI6CE,wFAEnBA,6EATXH,EAAOK,KAAI,EAACC,KAAEA,KAAWA,IAAMC,KAAK,qDAYrBL,yCAAoDE,6DAInF,GACF,G,IFIL,SAAS5B,IG1BM,IAA0BgC,EAAaC,EH2BpDnC,EAAYG,SG3B2B+B,EH6BrClC,EAAYmB,KG7BsCgB,EH8BlDnC,EAAYU,MACZnB,EAAKI,wBG9BG4B,UCHG,SAA0BW,EAAaC,GACpD,IAAIC,EAAUF,EAAc,EACxBG,EAAUH,EAAc,EAExBE,EAAU,IACZA,EAAU,EACVC,EAAU,EAAIF,EAAaA,EAAa,GAGtCE,EAAUF,IACZE,EAAUF,EACVC,EAAUD,EAAa,EAAI,EAAI,EAAIA,EAAa,GAGlD,IAAIzB,EAAQ,GACZ,IAAK,IAAI4B,EAAIF,EAASE,GAAKD,EAASC,GAAK,EAGvC5B,GAAS,WADP4B,IAAMJ,EAAc,sCAAwC,iBACnBI,6BAA6BA,aAiC1E,OAhBkB,IAAhBJ,EACI,mRAGA,uRAjBJE,EAAU,EACN,0DACA,KAMiBA,EAAU,EAAI,oCAAsC,IAyBzE1B,GAvBA2B,EAAUF,EAAa,EAAI,oCAAsC,KANjEE,EAAUF,EACN,sBAAsBA,6BAAsCA,aAC5D,KAeJD,IAAgBC,EACZ,gRAGA,iR,CD5CgB,CAAiBD,EAAaC,E,CHqBtDnC,EAAYC,YAnBO,gBAqBnBC","sources":["src/js/library-page.js","src/js/Movies-library.js","src/templates/movies-markup.js","src/js/render-pagination.js","src/templates/pagination-markup.js"],"sourcesContent":["import MoviesLibrary from './Movies-library';\nimport createMoviesMarkup from '../templates/movies-markup';\nimport renderPagination from './render-pagination';\n\nconst LS_QUEUE = 'queueForWatch';\nconst LS_WATCHED = 'watchedMovies';\n\nconst refs = {\n  libraryMoviesContainer: document.querySelector('[data-user-library]'),\n  libraryMoviesPagination: document.querySelector(\n    '[data-user-library-pagination]'\n  ),\n  libraryWatchedBtn: document.querySelector('[data-library=\"watched\"]'),\n  libraryQueueBtn: document.querySelector('[data-library=\"queue\"]'),\n};\n\nrefs.libraryWatchedBtn.addEventListener('click', onWatchedBtnClick);\nrefs.libraryQueueBtn.addEventListener('click', onQueueBtnClick);\n\nconst userLibrary = new MoviesLibrary(\n  refs.libraryMoviesContainer,\n  createMoviesMarkup\n);\n\nuserLibrary.storageName = LS_WATCHED;\n\nupdateUserLibrary();\n\nfunction updateUserLibrary() {\n  userLibrary.render();\n  renderPagination(\n    userLibrary.page,\n    userLibrary.pages,\n    refs.libraryMoviesPagination\n  );\n}\n\nfunction onWatchedBtnClick(e) {\n  userLibrary.storageName = LS_WATCHED;\n  updateUserLibrary();\n}\n\nfunction onQueueBtnClick(e) {\n  userLibrary.storageName = LS_QUEUE;\n  updateUserLibrary();\n}\n\n// function onMoviesQueuePaginationClick(e) {\n//   const target = e.target.closest('button');\n//   if (!target) return;\n\n//   if (target.dataset.page) {\n//     moviesQueue.page = Number(target.dataset.page);\n//   }\n//   if (target.dataset.pageStep) {\n//     moviesQueue.page += Number(target.dataset.pageStep);\n//   }\n//   updateMoviesQueue();\n// }\n\n// // ----------------------------------------------------\n// const watchedMovies = new MoviesLibrary(\n//   refs.watchedMoviesContainer,\n//   'watchedMovies',\n//   createMoviesMarkup\n// );\n\n// updateWatchedMovies();\n\n// function updateWatchedMovies() {\n//   watchedMovies.render();\n//   renderPagination(\n//     watchedMovies.page,\n//     watchedMovies.pages,\n//     refs.watchedMoviesPagination\n//   );\n// }\n\n// function onWatchedMoviesPaginationClick(e) {\n//   const target = e.target.closest('button');\n//   if (!target) return;\n\n//   if (target.dataset.page) {\n//     watchedMovies.page = Number(target.dataset.page);\n//   }\n//   if (target.dataset.pageStep) {\n//     watchedMovies.page += Number(target.dataset.pageStep);\n//   }\n//   updateWatchedMovies();\n// }\n","export default class MoviesLibrary {\n  constructor(container, createMarkup) {\n    this.container = container;\n    this.storageName = '';\n    this.page = 1;\n    this.pages = 1;\n    this.createMarkup = createMarkup;\n  }\n\n  render() {\n    const moviesData = JSON.parse(localStorage.getItem(this.storageName));\n    if (!moviesData) return;\n    this.pages = Math.ceil(moviesData.length / 20);\n    const currentPageMoviesData = moviesData.reduce((acc, movie, index) => {\n      if (index < this.page * 20 && index >= (this.page - 1) * 20) {\n        return [...acc, movie];\n      } else {\n        return acc;\n      }\n    }, []);\n    const markup = this.createMarkup(currentPageMoviesData);\n    this.container.innerHTML = markup;\n  }\n}\n","const BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport default function createMoviesMarkup(moviesData) {\n  return moviesData.reduce((acc, movie) => {\n    const { id, genres, poster_path, release_date, title, vote_average } =\n      movie;\n\n    const genresList = genres.map(({ name }) => name).join(', ');\n    const poster = poster_path\n      ? `${BASE_URL}w500${poster_path}`\n      : './default-poster.jpg';\n\n    return `${acc}\n      <li class=\"card__film\"  data-movie-id=\"${id}\">\n        <img class=\"card__img\"src=\"${poster}\" alt=\"${title} movie poster\" >\n        <div class=\"card__info\">\n        <h2 class=\"card__title\">${title}</h2>\n        <p class=\"card__text\">\n        <span class=\"card__genre\">${genresList}</span>\n        <span class=\"card__release\">${release_date}</span><span class=\"card__rating   \">${vote_average}</span>\n        </p>\n        </div>\n      </li>\n      `;\n  }, '');\n}\n","import paginationMarkup from '../templates/pagination-markup';\n\nexport default function renderPagination(currentPage, totalPages, container) {\n  container.innerHTML = paginationMarkup(currentPage, totalPages);\n}","export default function paginationMarkup(currentPage, totalPages) {\n  let minPage = currentPage - 2;\n  let maxPage = currentPage + 2;\n\n  if (minPage < 1) {\n    minPage = 1;\n    maxPage = 5 > totalPages ? totalPages : 5;\n  }\n\n  if (maxPage > totalPages) {\n    maxPage = totalPages;\n    minPage = totalPages - 5 < 2 ? 1 : totalPages - 4;\n  }\n\n  let pages = '';\n  for (let i = minPage; i <= maxPage; i += 1) {\n    const btnClass =\n      i === currentPage ? 'class=\"pagination-btn current-page\"' : '';\n    pages += `<button ${btnClass} data-page=\"${i}\" class=\"pagination-btn\">${i}</button>`;\n  }\n\n  const firstPage =\n    minPage > 1\n      ? `<button data-page=\"1\" class=\"pagination-btn\">1</button>`\n      : '';\n  const lastPage =\n    maxPage < totalPages\n      ? `<button data-page=\"${totalPages}\" class=\"pagination-btn\">${totalPages}</button>`\n      : '';\n\n  const firstSeparator = minPage > 2 ? '<span class=\"span-btn\">...</span>' : '';\n  const lastSeparator =\n    maxPage < totalPages - 1 ? '<span class=\"span-btn\">...</span>' : '';\n\n  const goBackBtn =\n    currentPage === 1\n      ? `<button disabled class=\"pagination-btn disabled\"><svg class=\"arrow__icon\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M25.334 16h-18.668M16 25.334l-9.334-9.334 9.334-9.334\"></path>\n              </svg></button>`\n      : `<button data-page-step=\"-1\" class=\"pagination-btn\"><svg class=\"arrow__icon\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M25.334 16h-18.668M16 25.334l-9.334-9.334 9.334-9.334\"></path>\n              </svg></button>`;\n  const goForwardBtn =\n    currentPage === totalPages\n      ? `<button disabled class=\"pagination-btn disabled\"><svg class=\"arrow__icon\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6.666 16h18.668M16 25.334l9.334-9.334-9.334-9.334\"></path>\n              </svg></button>`\n      : `<button data-page-step=\"1\" class=\"pagination-btn\"><svg class=\"arrow__icon\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6.666 16h18.668M16 25.334l9.334-9.334-9.334-9.334\"></path>\n              </svg></button>`;\n\n  return (\n    goBackBtn +\n    firstPage +\n    firstSeparator +\n    pages +\n    lastSeparator +\n    lastPage +\n    goForwardBtn\n  );\n}\n"],"names":["$7f2b7e52377f3ad1$var$refs","libraryMoviesContainer","document","querySelector","libraryMoviesPagination","libraryWatchedBtn","libraryQueueBtn","addEventListener","e","$7f2b7e52377f3ad1$var$userLibrary","storageName","$7f2b7e52377f3ad1$var$updateUserLibrary","render","moviesData","JSON","parse","localStorage","getItem","this","pages","Math","ceil","length","currentPageMoviesData","reduce","acc","movie","index","page","markup","createMarkup","container","innerHTML","constructor","id","genres","poster_path","release_date","title","vote_average","map","name","join","currentPage","totalPages","minPage","maxPage","i"],"version":3,"file":"my-library.9d3fef10.js.map"}