{"mappings":"sjBAQA,MAAMA,EAAO,CACXC,uBAAwBC,SAASC,cAAc,uBAC/CC,wBAAyBF,SAASC,cAChC,kCAEFE,kBAAmBH,SAASC,cAAc,4BAC1CG,gBAAiBJ,SAASC,cAAc,0BACxCI,oBAAqBL,SAASC,cAAc,wBAC5CK,aAAcN,SAASC,cAAc,0BACrCM,cAAeP,SAASC,cAAc,4BAGxCH,EAAKK,kBAAkBK,iBAAiB,SA8DxC,SAA2BC,GA2BzBX,EAAKK,kBAAkBO,UAAUC,IAAI,eACrCb,EAAKM,gBAAgBM,UAAUE,OAAO,eA1BtCC,EAAYC,YAAcC,EAAAC,WAC1BC,EAAoBJ,E,IAhEtBf,EAAKM,gBAAgBI,iBAAiB,SAmEtC,SAAyBC,GA0BvBX,EAAKM,gBAAgBM,UAAUC,IAAI,eACnCb,EAAKK,kBAAkBO,UAAUE,OAAO,eAzBxCC,EAAYC,YAAcC,EAAAG,SAC1BD,EAAoBJ,E,IArEtBf,EAAKC,uBAAuBS,iBAAiB,SAiB7C,SAA0BC,GACxB,MAAMU,EAAWV,EAAEW,OAAOC,QAAQ,MAClC,IAAKF,EAAU,OAEf,MAEMG,EAKR,SAA4BC,EAASC,GACnC,MAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQL,EAAYV,cAC/D,IAAKW,EAAY,OAIjB,OAFkBA,EAAWK,MAAK,EAACC,GAAEA,KAASA,IAAOR,G,CATnCS,CAFFC,OAAOd,EAASe,QAAQX,SAEMV,IAE9C,EAAAsB,EAAAC,SAAYd,E,IAxBdxB,EAAKI,wBAAwBM,iBAC3B,SAsEF,SAAuCC,IACrC,EAAA4B,EAAAD,WACA,MAAMhB,EAASX,EAAEW,OAAOC,QAAQ,UAChC,IAAKD,EAAQ,OAETA,EAAOc,QAAQI,OACjBzB,EAAYyB,KAAOL,OAAOb,EAAOc,QAAQI,OAEvClB,EAAOc,QAAQK,WACjB1B,EAAYyB,MAAQL,OAAOb,EAAOc,QAAQK,WAE5CtB,EAAoBJ,E,IA9EtBf,EAAKQ,aAAaE,iBAAiB,QAASgC,EAAAJ,SAC5CtC,EAAKS,cAAcC,iBAAiB,QAASgC,EAAAJ,SAE7C,MAAMvB,EAAc,IC9BL,MASb4B,SACE,MAAMC,EAAahB,KAAKC,MAAMC,aAAaC,QAAQc,KAAK7B,cACxD,IAAK4B,EAAY,OACjBC,KAAKC,MAAQC,KAAKC,KAAKJ,EAAWK,OAAS,IAC3C,MAAMC,EAAwBN,EAAWO,QAAO,CAACC,EAAKC,EAAOC,IACvDA,EAAoB,GAAZT,KAAKL,MAAac,GAA2B,IAAjBT,KAAKL,KAAO,GAC3C,IAAIY,EAAKC,GAETD,GAER,IACGG,EAASV,KAAKW,aAAaN,GACjCL,KAAKY,UAAUC,UAAYH,C,CApB7BI,YAAYF,EAAWD,GACrBX,KAAKY,UAAYA,EACjBZ,KAAK7B,YAAc,GACnB6B,KAAKL,KAAO,EACZK,KAAKC,MAAQ,EACbD,KAAKW,aAAeA,C,GDyBtBxD,EAAKC,uBACL2D,EAAAtB,SA2BF,SAASnB,EAAoB0C,GA4D3B7D,EAAKC,uBAAuByD,UAAY,GACxC1D,EAAKI,wBAAwBsD,UAAY,GA1DzC,MAAM/B,EAAaC,KAAKC,MACtBC,aAAaC,QAAQ8B,EAAc7C,eAEhCW,GAAcA,EAAWsB,OAAS,EA2DvCjD,EAAKO,oBAAoBK,UAAUE,OAAO,oBAI1Cd,EAAKO,oBAAoBK,UAAUC,IAAI,mBAzDvCgD,EAAclB,SAEVhB,EAAWsB,OAAS,KACtB,EAAAa,EAAAxB,SACEuB,EAAcrB,KACdqB,EAAcf,MACd9C,EAAKI,yB,CA1CXW,EAAYC,YAAcC,EAAAC,WAE1BC,EAAoBJ","sources":["src/js/library-page.js","src/js/Movies-library.js"],"sourcesContent":["import MoviesLibrary from './Movies-library';\nimport createMoviesMarkup from '../templates/movies-markup';\nimport renderPagination from './render-pagination';\nimport renderModal from './render-modal';\nimport backToTop from './scroll-to-top';\nimport { LS_QUEUE, LS_WATCHED } from './constants';\nimport clickTeamModal from './team';\n\nconst refs = {\n  libraryMoviesContainer: document.querySelector('[data-user-library]'),\n  libraryMoviesPagination: document.querySelector(\n    '[data-user-library-pagination]'\n  ),\n  libraryWatchedBtn: document.querySelector('[data-library=\"watched\"]'),\n  libraryQueueBtn: document.querySelector('[data-library=\"queue\"]'),\n  emptyLibraryMessage: document.querySelector('[data-empty-message]'),\n  openModalBtn: document.querySelector('[data-modal-team-open]'),\n  closeModalBtn: document.querySelector('[data-modal-team-close]'),\n};\n\nrefs.libraryWatchedBtn.addEventListener('click', onWatchedBtnClick);\nrefs.libraryQueueBtn.addEventListener('click', onQueueBtnClick);\nrefs.libraryMoviesContainer.addEventListener('click', onMovieCardClick);\nrefs.libraryMoviesPagination.addEventListener(\n  'click',\n  onMovieLibraryPaginationClick\n);\nrefs.openModalBtn.addEventListener('click', clickTeamModal);\nrefs.closeModalBtn.addEventListener('click', clickTeamModal);\n\nconst userLibrary = new MoviesLibrary(\n  refs.libraryMoviesContainer,\n  createMoviesMarkup\n);\n\nuserLibrary.storageName = LS_WATCHED;\n\nupdateMoviesLibrary(userLibrary);\n\nfunction onMovieCardClick(e) {\n  const targetEl = e.target.closest('li');\n  if (!targetEl) return;\n\n  const movieId = Number(targetEl.dataset.movieId);\n\n  const movieData = getMovieDatafromLS(movieId, userLibrary);\n\n  renderModal(movieData);\n}\n\nfunction getMovieDatafromLS(movieId, libraryName) {\n  const moviesList = JSON.parse(localStorage.getItem(libraryName.storageName));\n  if (!moviesList) return;\n\n  const movieData = moviesList.find(({ id }) => id === movieId);\n\n  return movieData;\n}\n\nfunction updateMoviesLibrary(moviesLibrary) {\n  clearLibraryContainer();\n\n  const moviesList = JSON.parse(\n    localStorage.getItem(moviesLibrary.storageName)\n  );\n  if (!moviesList || moviesList.length < 1) {\n    showEmptyLibraryMessage();\n    return;\n  }\n\n  hideEmptyLibraryMessage();\n  moviesLibrary.render();\n\n  if (moviesList.length > 20) {\n    renderPagination(\n      moviesLibrary.page,\n      moviesLibrary.pages,\n      refs.libraryMoviesPagination\n    );\n  }\n}\n\nfunction onWatchedBtnClick(e) {\n  setWatchedBtnActive();\n  userLibrary.storageName = LS_WATCHED;\n  updateMoviesLibrary(userLibrary);\n}\n\nfunction onQueueBtnClick(e) {\n  setQueueBtnActive();\n  userLibrary.storageName = LS_QUEUE;\n  updateMoviesLibrary(userLibrary);\n}\n\nfunction onMovieLibraryPaginationClick(e) {\n  backToTop();\n  const target = e.target.closest('button');\n  if (!target) return;\n\n  if (target.dataset.page) {\n    userLibrary.page = Number(target.dataset.page);\n  }\n  if (target.dataset.pageStep) {\n    userLibrary.page += Number(target.dataset.pageStep);\n  }\n  updateMoviesLibrary(userLibrary);\n}\n\nfunction setWatchedBtnActive() {\n  refs.libraryWatchedBtn.classList.add('active__btn');\n  refs.libraryQueueBtn.classList.remove('active__btn');\n}\n\nfunction setQueueBtnActive() {\n  refs.libraryQueueBtn.classList.add('active__btn');\n  refs.libraryWatchedBtn.classList.remove('active__btn');\n}\n\nfunction clearLibraryContainer() {\n  refs.libraryMoviesContainer.innerHTML = '';\n  refs.libraryMoviesPagination.innerHTML = '';\n}\n\nfunction showEmptyLibraryMessage() {\n  refs.emptyLibraryMessage.classList.remove('visually-hidden');\n}\n\nfunction hideEmptyLibraryMessage() {\n  refs.emptyLibraryMessage.classList.add('visually-hidden');\n}\n","export default class MoviesLibrary {\n  constructor(container, createMarkup) {\n    this.container = container;\n    this.storageName = '';\n    this.page = 1;\n    this.pages = 1;\n    this.createMarkup = createMarkup;\n  }\n\n  render() {\n    const moviesData = JSON.parse(localStorage.getItem(this.storageName));\n    if (!moviesData) return;\n    this.pages = Math.ceil(moviesData.length / 20);\n    const currentPageMoviesData = moviesData.reduce((acc, movie, index) => {\n      if (index < this.page * 20 && index >= (this.page - 1) * 20) {\n        return [...acc, movie];\n      } else {\n        return acc;\n      }\n    }, []);\n    const markup = this.createMarkup(currentPageMoviesData);\n    this.container.innerHTML = markup;\n  }\n}\n"],"names":["$7f2b7e52377f3ad1$var$refs","libraryMoviesContainer","document","querySelector","libraryMoviesPagination","libraryWatchedBtn","libraryQueueBtn","emptyLibraryMessage","openModalBtn","closeModalBtn","addEventListener","e","classList","add","remove","$7f2b7e52377f3ad1$var$userLibrary","storageName","$8G1wF","LS_WATCHED","$7f2b7e52377f3ad1$var$updateMoviesLibrary","LS_QUEUE","targetEl","target","closest","movieData","movieId","libraryName","moviesList","JSON","parse","localStorage","getItem","find","id","$7f2b7e52377f3ad1$var$getMovieDatafromLS","Number","dataset","$99kNq","default","$dpZmf","page","pageStep","$3sLj0","render","moviesData","this","pages","Math","ceil","length","currentPageMoviesData","reduce","acc","movie","index","markup","createMarkup","container","innerHTML","constructor","$5SV25","moviesLibrary","$22sps"],"version":3,"file":"my-library.e20be93f.js.map"}